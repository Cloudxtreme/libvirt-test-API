#!/usr/bin/env python
#
# libvirt-test-API is copyright 2010 Red Hat, Inc.
#
# libvirt-test-API is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version. This program is distributed in
# the hope that it will be useful, but WITHOUT ANY WARRANTY; without
# even the implied warranties of TITLE, NON-INFRINGEMENT,
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#
# The GPL text is available in the file COPYING that accompanies this
# distribution and at <http://www.gnu.org/licenses>.
#
# Filename: mapper.py 
# Summary: a module to get list which we want.  
# Description: The module help form new lists from 
#              original list generated by module parser 
#              the purpose is get useful information about a testrun
# Maintainer: gren@redhat.com
# Updated: Oct 19 2009
# Version: 0.1.0

import copy

class Mapper(object):

    def __init__(self, testcases_list):
        self.testcases_list = copy.deepcopy(testcases_list)
  
    def get_language_tripped(self):
        """ remove the language information from
            case to form a new dictionary 
        """
        tripped_cases_list = []
        for testcase in self.testcases_list:
            tripped_case = {}
            testcases_names = testcase.keys()[0]

            if testcases_names == 'sleep':
                tripped_cases_list.append(testcase)
                continue

            names = testcases_names.split(":")
            package_casename = names[0] +":"+ names[1]

            testcases_params = testcase.values()[0]
            tripped_case[package_casename] = testcases_params

            tripped_cases_list.append(tripped_case)
        return tripped_cases_list

    def get_language_package_tripped(self):
        """ remove the language and package information to form 
            a new dictionary 
        """
        tripped_cases_list = []
        for testcase in self.testcases_list: 
            tripped_case = {}
            testcases_names = testcase.keys()[0]

            if testcases_names == 'sleep':
                tripped_cases_list.append(testcase)
                continue
            # FIXME: We changed the intention to only support Python language,
            # which means we won't define the language type in cases with prefix
            # like "Python:", this is a tempory solution, need to improve.
            #language = testcases_names.split(":")[0]
            language = "Python"
            casename = testcases_names.split(":")[1]

            testcases_params = testcase.values()[0]
            tripped_case[casename] = testcases_params

            tripped_cases_list.append(tripped_case)
        return tripped_cases_list, language

